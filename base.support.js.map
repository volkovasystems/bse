{"version":3,"sources":["base.support.js"],"names":["falzy","require","EMPTY_STRING","ENCODE","DECODE","IDLE","ERROR","RESULT","MODE","DATA","Base","data","base","isNaN","isFinite","Error","parse","error","setError","stack","done","setEncodeMode","call","setResult","undefined","setDecodeMode","clear","result","module","exports"],"mappings":"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","file":"base.support.js","sourcesContent":["\"use strict\";\n\n/*;\n\t@submodule-license:\n\t\tThe MIT License (MIT)\n\t\t@mit-license\n\n\t\tCopyright (@c) 2017 Richeve Siodina Bebedor\n\t\t@email: richeve.bebedor@gmail.com\n\n\t\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\t\tof this software and associated documentation files (the \"Software\"), to deal\n\t\tin the Software without restriction, including without limitation the rights\n\t\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t\tcopies of the Software, and to permit persons to whom the Software is\n\t\tfurnished to do so, subject to the following conditions:\n\n\t\tThe above copyright notice and this permission notice shall be included in all\n\t\tcopies or substantial portions of the Software.\n\n\t\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t\tSOFTWARE.\n\t@end-submodule-license\n\n\t@submodule-configuration:\n\t\t{\n\t\t\t\"package\": \"bse\",\n\t\t\t\"path\": \"bse/base.module.js\",\n\t\t\t\"file\": \"base.module.js\",\n\t\t\t\"module\": \"bse\",\n\t\t\t\"author\": \"Richeve S. Bebedor\",\n\t\t\t\"eMail\": \"richeve.bebedor@gmail.com\",\n\t\t\t\"repository\": \"https://github.com/volkovasystems/bse.git\",\n\t\t\t\"test\": \"bse-test.js\",\n\t\t\t\"global\": false,\n\t\t\t\"internal\": true,\n\t\t\t\"class\": true\n\t\t}\n\t@end-submodule-configuration\n\n\t@submodule-documentation:\n\t\tBase class construct.\n\n\t\tThe purpose of this class is to facilitate the base conversion.\n\t\tThis should not contain ways of introspection.\n\t@end-submodule-documentation\n\n\t@include:\n\t\t{\n\t\t\t\"falzy\": \"falzy\"\n\t\t}\n\t@end-include\n*/\n\nconst falzy = require( \"falzy\" );\n\nconst EMPTY_STRING = \"\";\n\nconst ENCODE = \"encode\";\nconst DECODE = \"decode\";\nconst IDLE = \"idle\";\n\nconst ERROR = Symbol( \"error\" );\nconst RESULT = Symbol( \"result\" );\nconst MODE = Symbol( \"mode\" );\nconst DATA = Symbol( \"data\" );\n\nclass Base {\n\tconstructor( data, base ){\n\t\t/*;\n\t\t\t@meta-configuration:\n\t\t\t\t{\n\t\t\t\t\t\"data\": \"*\",\n\t\t\t\t\t\"base\": \"number\"\n\t\t\t\t}\n\t\t\t@end-meta-configuration\n\t\t*/\n\n\t\tif(\n\t\t\ttypeof base != \"number\"\n\t\t\t|| isNaN( base )\n\t\t\t|| !isFinite( base )\n\t\t\t|| base < 2\n\t\t){\n\t\t\tthrow new Error( `invalid base, ${ base }` );\n\t\t}\n\n\t\tthis[ DATA ] = this.parse( data );\n\t\tthis[ RESULT ] = EMPTY_STRING;\n\t\tthis[ MODE ] = IDLE;\n\t\tthis[ ERROR ] = null;\n\t}\n\n\t/*;\n\t\t@method-documentation:\n\t\t\tParse the data to make it compatible for conversion.\n\t\t@end-method-documentation\n\n\t\t@note:\n\t\t\tThis should be overridden if possible.\n\t\t@end-note\n\t*/\n\tparse( data ){\n\t\t/*;\n\t\t\t@meta-configuration:\n\t\t\t\t{\n\t\t\t\t\t\"data\": \"*\"\n\t\t\t\t}\n\t\t\t@end-meta-configuration\n\t\t*/\n\n\t\tif( falzy( data ) ){\n\t\t\tdata = EMPTY_STRING;\n\t\t}\n\n\t\ttry{\n\t\t\treturn `${ data }`;\n\n\t\t}catch( error ){\n\t\t\tthis.setError( new Error( `cannot parse data, ${ error.stack }` ) );\n\n\t\t\treturn data;\n\t\t}\n\t}\n\n\t/*;\n\t\t@method-documentation:\n\t\t\tEncode the data.\n\t\t@end-method-documentation\n\n\t\t@note:\n\t\t\tThis should be overridden.\n\t\t@end-note\n\t*/\n\tencode( done ){\n\t\t/*;\n\t\t\t@meta-configuration:\n\t\t\t\t{\n\t\t\t\t\t\"done\": \"function\"\n\t\t\t\t}\n\t\t\t@end-meta-configuration\n\t\t*/\n\n\t\tthis.setEncodeMode( );\n\n\t\ttry{\n\t\t\tif( typeof done == \"function\" ){\n\t\t\t\tdone.call( this, null, EMPTY_STRING );\n\n\t\t\t\treturn this;\n\n\t\t\t}else{\n\t\t\t\treturn EMPTY_STRING;\n\t\t\t}\n\n\t\t}finally{\n\t\t\tthis.setResult( EMPTY_STRING );\n\n\t\t\tdone = undefined;\n\t\t}\n\t}\n\n\t/*;\n\t\t@method-documentation:\n\t\t\tDecode the data.\n\t\t@end-method-documentation\n\n\t\t@note:\n\t\t\tThis should be overridden.\n\t\t@end-note\n\t*/\n\tdecode( done ){\n\t\t/*;\n\t\t\t@meta-configuration:\n\t\t\t\t{\n\t\t\t\t\t\"done\": \"function\"\n\t\t\t\t}\n\t\t\t@end-meta-configuration\n\t\t*/\n\n\t\tthis.setDecodeMode( );\n\n\t\ttry{\n\t\t\tif( typeof done == \"function\" ){\n\t\t\t\tdone.call( this, null, EMPTY_STRING );\n\n\t\t\t\treturn this;\n\n\t\t\t}else{\n\t\t\t\treturn EMPTY_STRING;\n\t\t\t}\n\n\t\t}finally{\n\t\t\tthis.setResult( EMPTY_STRING );\n\n\t\t\tdone = undefined;\n\t\t}\n\t}\n\n\tclear( ){\n\t\tthis[ RESULT ] = EMPTY_STRING;\n\t\tthis[ ERROR ] = null;\n\t\tthis[ MODE ] = IDLE;\n\t}\n\n\tflush( ){\n\t\tthis.clear( );\n\t\tthis[ DATA ] = EMPTY_STRING;\n\t}\n\n\tsetEncodeMode( ){\n\t\tthis[ MODE ] = ENCODE;\n\n\t\treturn this;\n\t}\n\n\tisEncodeMode( ){\n\t\treturn this[ MODE ] === ENCODE;\n\t}\n\n\tsetDecodeMode( ){\n\t\tthis[ MODE ] = DECODE;\n\n\t\treturn this;\n\t}\n\n\tisDecodeMode( ){\n\t\treturn this[ MODE ] === DECODE;\n\t}\n\n\tsetIdleMode( ){\n\t\tthis[ MODE ] = IDLE;\n\n\t\treturn this;\n\t}\n\n\tisIdleMode( ){\n\t\treturn this[ MODE ] === IDLE;\n\t}\n\n\tgetData( ){\n\t\treturn this[ DATA ];\n\t}\n\n\tsetResult( result ){\n\t\t/*;\n\t\t\t@meta-configuration:\n\t\t\t\t{\n\t\t\t\t\t\"result\": \"*\"\n\t\t\t\t}\n\t\t\t@end-meta-configuration\n\t\t*/\n\n\t\tthis[ RESULT ] = result;\n\n\t\treturn this;\n\t}\n\n\tgetResult( ){\n\t\treturn this[ RESULT ];\n\t}\n\n\tsetError( error ){\n\t\t/*;\n\t\t\t@meta-configuration:\n\t\t\t\t{\n\t\t\t\t\t\"error\": Error\n\t\t\t\t}\n\t\t\t@end-meta-configuration\n\t\t*/\n\n\t\tif( error instanceof Error ){\n\t\t\tthis[ ERROR ] = error;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\thasError( ){\n\t\treturn this[ ERROR ] instanceof Error;\n\t}\n\n\tgetError( ){\n\t\treturn this[ ERROR ];\n\t}\n}\n\nmodule.exports = Base;\n"]}